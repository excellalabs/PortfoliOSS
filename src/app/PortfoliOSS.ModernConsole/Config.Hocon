akka { 
    loglevel=DEBUG,  
    loggers=["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"]
}
akka.persistence{
	journal {
	        plugin = "akka.persistence.journal.sql-server"
		sql-server {
			# qualified type name of the SQL Server persistence journal actor
			class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"

			# dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"

			# connection string used for database access
			# TODO: These are hard-coded creds but they're meant for a local DB run. Don't hard-code the creds!
			connection-string = "Server=localhost;Database=portfolioss;User Id=sa;Password=yourStrong(!)Password;Trust Server Certificate=true;"

			# default SQL commands timeout
			connection-timeout = 30s

			# SQL server schema name to table corresponding with persistent journal
			schema-name = dbo

			# SQL server table corresponding with persistent journal
			table-name = EventJournal

			# should corresponding journal table be initialized automatically
			auto-initialize = on

			# timestamp provider used for generation of journal entries timestamps
			timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"

			# metadata table
			metadata-table-name = Metadata
			
			# Recommended: change default circuit breaker settings
			# By uncommenting below and using Connection Timeout + Command Timeout
			# circuit-breaker.call-timeout=30s
		}
	}

	snapshot-store {
	        plugin = "akka.persistence.snapshot-store.sql-server"
		sql-server {

			# qualified type name of the SQL Server persistence journal actor
			class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"

			# dispatcher used to drive journal actor
			plugin-dispatcher = ""akka.actor.default-dispatcher""

			# connection string used for database access
			# TODO: Don't hard-code these creds! These are fine for initial first publish as they're dummy creds, but we should fix that ASAP.
			connection-string = "Server=localhost;Database=portfolioss;User Id=sa;Password=yourStrong(!)Password;Trust Server Certificate=true;"

			# default SQL commands timeout
			connection-timeout = 30s

			# SQL server schema name to table corresponding with persistent journal
			schema-name = dbo

			# SQL server table corresponding with persistent journal
			table-name = SnapshotStore

			# should corresponding journal table be initialized automatically
			auto-initialize = on
			
			# Recommended: change default circuit breaker settings
			# By uncommenting below and using Connection Timeout + Command Timeout
			# circuit-breaker.call-timeout=30s
		}
	}
	query {
		my-read-journal {
				# Implementation class of the SQL ReadJournalProvider
				class = "Akka.Persistence.Query.Sql.SqlReadJournalProvider, Akka.Persistence.Query.Sql"
  
				# Absolute path to the write journal plugin configuration entry that this 
				# query journal will connect to. 
				# If undefined (or "") it will connect to the default journal as specified by the
				# akka.persistence.journal.plugin property.
				write-plugin = ""
  
				# The SQL write journal is notifying the query side as soon as things
				# are persisted, but for efficiency reasons the query side retrieves the events 
				# in batches that sometimes can be delayed up to the configured `refresh-interval`.
				refresh-interval = 3s
  
				# How many events to fetch in one query (replay) and keep buffered until they
				# are delivered downstreams.
				max-buffer-size = 10000				
		}
	}
}